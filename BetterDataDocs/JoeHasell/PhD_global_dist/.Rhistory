#
View(dist_test)
View(dist_test2)
library(tidyverse)
library(gpinter)
library(knitr)
fp<- "/Users/joehasell/Documents/GitHub/personal_site/PhD_pages/Paper_1/data_appendix/data/original/pip_percentiles.csv"
df_pip_percentiles<- read.csv(fp)
df_alt <- df_pip_percentiles %>%
group_by(country_code, year, reporting_level) %>%
mutate(
avg_welfare = lead(avg_welfare),
welfare_share = lead(welfare_share),
percentile = (percentile)/100
)
df_alt <- df_alt %>%
filter(
percentile != 1
)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
dataframe) {
filtered_df<- dataframe %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
dist_test2 <- prep_dist('CHN', 1981, 'rural', 1, df_alt)
# print(top_share(distribution_shares_only, 0.99))
# print(gini(dist_test))
print(gini(dist_test2))
#
#
# average <- 1.9 # Average income
# p <- c(0.10, 0.50, 0.90, 0.99) # Fractiles between 0 an 1
# q <- c(0.4977179, 0.9098843, 1.5783320, 2.7111103) # Matching quantiles
# a <- c(0.5050069, 0.9145399, 1.6017084, 2.9900878) # Matching bracket averages
#
# distribution <- tabulation_fit(p, q, bracketavg = a, average = average)
#
library(tidyverse)
library(gpinter)
library(knitr)
fp<- "/Users/joehasell/Documents/GitHub/personal_site/PhD_pages/Paper_1/data_appendix/data/original/pip_percentiles.csv"
df_pip_percentiles<- read.csv(fp)
df_alt <- df_pip_percentiles %>%
group_by(country_code, year, reporting_level) %>%
mutate(
avg_welfare = lead(avg_welfare),
welfare_share = lead(welfare_share),
percentile = (percentile)/100
)
df_alt <- df_alt %>%
filter(
percentile != 1
)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df) {
filtered_df<- df %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
dist_test2 <- prep_dist('CHN', 1981, 'rural', 1, df_alt)
# print(top_share(distribution_shares_only, 0.99))
# print(gini(dist_test))
print(gini(dist_test2))
#
#
# average <- 1.9 # Average income
# p <- c(0.10, 0.50, 0.90, 0.99) # Fractiles between 0 an 1
# q <- c(0.4977179, 0.9098843, 1.5783320, 2.7111103) # Matching quantiles
# a <- c(0.5050069, 0.9145399, 1.6017084, 2.9900878) # Matching bracket averages
#
# distribution <- tabulation_fit(p, q, bracketavg = a, average = average)
#
library(tidyverse)
library(gpinter)
library(knitr)
fp<- "/Users/joehasell/Documents/GitHub/personal_site/PhD_pages/Paper_1/data_appendix/data/original/pip_percentiles.csv"
df_pip_percentiles<- read.csv(fp)
df_alt <- df_pip_percentiles %>%
group_by(country_code, year, reporting_level) %>%
mutate(
avg_welfare = lead(avg_welfare),
welfare_share = lead(welfare_share),
percentile = (percentile)/100
)
df_alt <- df_alt %>%
filter(
percentile != 1
)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df) {
filtered_df<- df %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
dist_test2 <- prep_dist('CHN', 1981, 'rural', 1, df_alt)
print(top_share(dist_test2, 0.99))
# print(gini(dist_test))
print(gini(dist_test2))
#
#
# average <- 1.9 # Average income
# p <- c(0.10, 0.50, 0.90, 0.99) # Fractiles between 0 an 1
# q <- c(0.4977179, 0.9098843, 1.5783320, 2.7111103) # Matching quantiles
# a <- c(0.5050069, 0.9145399, 1.6017084, 2.9900878) # Matching bracket averages
#
# distribution <- tabulation_fit(p, q, bracketavg = a, average = average)
#
devtools::install_github("worldbank/pipr")
library(pipr)
df2 <- get_stats(country = "CHN")
View(df2)
df2 <- get_stats()
View(df2)
df<- df2 %>%
filter(country_code == 'CHN',
reporting_level == 'urban')
View(df)
df<- df2 %>%
filter(country_code == 'CHN',
reporting_level == 'urban',
year == 2000)
this_pop = as.numeric(df$pop)
print(this_pop)
df<- df2 %>%
filter(country_code == 'CHN',
reporting_level == 'urban',
year == 2000)
this_pop = df$pop[1]
print(this_pop)
df<- df2 %>%
filter(country_code == 'CHN',
reporting_level == 'urban',
year == 2000)
this_pop = df$pop[0]
print(this_pop)
df<- df2 %>%
filter(country_code == 'CHN',
reporting_level == 'urban',
year == 2000)
df<- df2 %>%
filter(country_code == 'CHN',
reporting_level == 'urban',
year == 1981)
this_pop = df$pop[1]
print(this_pop)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df_percentiles) {
filtered_df<- df %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
prep_urban_rural_combined_dist <- function(
select_country,
select_year,
df_percentiles,
df_main_stats) {
# Get rural and urban population and mean from PIP main stats file
df_rural<- df_main_stats %>%
filter(
reporting_level == 'rural',
counry_code == select_country,
year == select_year)
rural_pop<- df_rural$pop[1]
rural_mean<- df_rural$mean[1]
df_urban<- df_main_stats %>%
filter(
reporting_level == 'urban',
counry_code == select_country,
year == select_year)
urban_pop<- df_urban$pop[1]
urban_mean<- df_urban$mean[1]
# Prep rural and urban distributions
rural_dist <- prep_dist(select_country, select_year, 'rural', rural_mean, df_percentiles)
urban_dist <- prep_dist(select_country, select_year, 'urban', urban_mean, df_percentiles)
# Merge using Gpinter function
merged_dist <- merge_dist(
dist = list(rural_dist, urban_dist),
popsize = c(rural_pop, urban_pop)
)
return(merged_dist)
}
dist_test2 <- prep_urban_rural_combined_dist('CHN', 1981, df_alt, df2)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df_percentiles) {
filtered_df<- df %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
prep_urban_rural_combined_dist <- function(
select_country,
select_year,
df_percentiles,
df_main_stats) {
# Get rural and urban population and mean from PIP main stats file
df_rural<- df_main_stats %>%
filter(
reporting_level == 'rural',
country_code == select_country,
year == select_year)
rural_pop<- df_rural$pop[1]
rural_mean<- df_rural$mean[1]
df_urban<- df_main_stats %>%
filter(
reporting_level == 'urban',
country_code == select_country,
year == select_year)
urban_pop<- df_urban$pop[1]
urban_mean<- df_urban$mean[1]
# Prep rural and urban distributions
rural_dist <- prep_dist(select_country, select_year, 'rural', rural_mean, df_percentiles)
urban_dist <- prep_dist(select_country, select_year, 'urban', urban_mean, df_percentiles)
# Merge using Gpinter function
merged_dist <- merge_dist(
dist = list(rural_dist, urban_dist),
popsize = c(rural_pop, urban_pop)
)
return(merged_dist)
}
dist_test2 <- prep_urban_rural_combined_dist('CHN', 1981, df_alt, df2)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df_percentiles) {
filtered_df<- df %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
select_country=='CHN'
select_country =='CHN'
select_country <- 'CHN'
select_year<-  1981
df_percentiles <-  df_alt
df_main_stats <-  df2
# Get rural and urban population and mean from PIP main stats file
df_rural<- df_main_stats %>%
filter(
reporting_level == 'rural',
country_code == select_country,
year == select_year)
rural_pop<- df_rural$pop[1]
rural_mean<- df_rural$mean[1]
df_urban<- df_main_stats %>%
filter(
reporting_level == 'urban',
country_code == select_country,
year == select_year)
urban_pop<- df_urban$pop[1]
urban_mean<- df_urban$mean[1]
rural_dist <- prep_dist(select_country, select_year, 'rural', rural_mean, df_percentiles)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'urban'
df_percentiles <-  df_alt
specify_average<- urban_mean
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df_percentiles) {
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
select_country <- 'CHN'
select_year<-  1981
df_percentiles <-  df_alt
df_main_stats <-  df2
# Get rural and urban population and mean from PIP main stats file
df_rural<- df_main_stats %>%
filter(
reporting_level == 'rural',
country_code == select_country,
year == select_year)
rural_pop<- df_rural$pop[1]
rural_mean<- df_rural$mean[1]
df_urban<- df_main_stats %>%
filter(
reporting_level == 'urban',
country_code == select_country,
year == select_year)
urban_pop<- df_urban$pop[1]
urban_mean<- df_urban$mean[1]
rural_dist <- prep_dist(select_country, select_year, 'rural', rural_mean, df_percentiles)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'urban'
df_percentiles <-  df_alt
specify_average<- urban_mean
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'rural'
df_percentiles <-  df_alt
specify_average<- urban_mean
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'rural'
df_percentiles <-  df_alt
specify_average<- rural_mean
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'rural'
df_percentiles <-  df_alt
specify_average<- rural_mean
fp<- "/Users/joehasell/Documents/GitHub/personal_site/PhD_pages/Paper_1/data_appendix/data/original/pip_percentiles.csv"
df_pip_percentiles<- read.csv(fp)
df_alt <- df_pip_percentiles %>%
group_by(country_code, year, reporting_level) %>%
mutate(
avg_welfare = lead(avg_welfare),
welfare_share = lead(welfare_share),
percentile = (percentile)/100
)
df_alt <- df_alt %>%
filter(
percentile != 1
)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'rural'
df_percentiles <-  df_alt
specify_average<- rural_mean
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
View(filtered_df)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
select_country <- 'CHN'
select_year<-  1981
select_reporting_level<- 'rural'
df_percentiles <-  df_alt
specify_average<- 1
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
specify_average<- ceiling(rural_mean *100)/100
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
prep_dist <- function(select_country,
select_year,
select_reporting_level,
specify_average,
df_percentiles) {
filtered_df<- df_percentiles %>%
filter(
country_code == select_country &
year == select_year &
reporting_level == select_reporting_level
)
p<- filtered_df$percentile
shares<- filtered_df$welfare_share
dist <- shares_fit(p = p, bracketshare = shares, average = specify_average)
return(dist)
}
select_country <- 'CHN'
select_year<-  1981
df_percentiles <-  df_alt
df_main_stats <-  df2
prep_urban_rural_combined_dist <- function(
select_country,
select_year,
df_percentiles,
df_main_stats) {
# Get rural and urban population and mean from PIP main stats file
df_rural<- df_main_stats %>%
filter(
reporting_level == 'rural',
country_code == select_country,
year == select_year)
rural_pop<- df_rural$pop[1]
rural_mean<- df_rural$mean[1]
# I have to round up the mean to the nearest cent for the GPinter to work (there has to be a bit of headroom for the interpolation to work)
rural_mean<- ceiling(rural_mean *100)/100
df_urban<- df_main_stats %>%
filter(
reporting_level == 'urban',
country_code == select_country,
year == select_year)
urban_pop<- df_urban$pop[1]
urban_mean<- df_urban$mean[1]
# I have to round up the mean to the nearest cent for the GPinter to work (there has to be a bit of headroom for the interpolation to work)
urban_mean<- ceiling(urban_mean *100)/100
# Prep rural and urban distributions
rural_dist <- prep_dist(select_country, select_year, 'rural', rural_mean, df_percentiles)
urban_dist <- prep_dist(select_country, select_year, 'urban', urban_mean, df_percentiles)
# Merge using Gpinter function
merged_dist <- merge_dist(
dist = list(rural_dist, urban_dist),
popsize = c(rural_pop, urban_pop)
)
return(merged_dist)
}
dist_test2 <- prep_urban_rural_combined_dist('CHN', 1981, df_alt, df2)
print(top_share(dist_test2, 0.90))
test<- df_main_stats %>%
filter(
country_code == select_country,
year == select_year)
View(test)
View(df_alt)
View(df_alt)
View(df_main_stats)
